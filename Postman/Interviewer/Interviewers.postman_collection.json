{
	"info": {
		"_postman_id": "b165c604-93af-4d63-a058-6b6e3af0f2e2",
		"name": "Interviewers",
		"description": "The InterviewersController class provides methods to query and manage interviewers.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get Interviewers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"const validateProperties = (item) => {\r",
							"    return item.InterviewerId !== undefined \r",
							"    && item.UserName !== undefined \r",
							"    && item.FirstName !== undefined\r",
							"    && item.LastName !== undefined\r",
							"    && item.EmailAddress !== undefined\r",
							"    && item.TelephoneNumber !== undefined\r",
							"    && item.ClientInterviewerId !== undefined\r",
							"    && item.SuccessfulCount !== undefined\r",
							"    && item.UnsuccessfulCount !== undefined\r",
							"    && item.DroppedOutCount !== undefined\r",
							"    && item.RejectedCount !== undefined\r",
							"    && item.LastSyncDate !== undefined\r",
							"    && item.IsFullSynced !== undefined\r",
							"    && item.IsLastSyncSuccessful !== undefined\r",
							"    && item.IsSupervisor !== undefined;\r",
							"}\r",
							"\r",
							"pm.test(\"Response contains InterviewerId & ClientInterviewerId\", function () {\r",
							"    var interviewers = pm.response.json();\r",
							"    pm.expect(interviewers.every(validateProperties)).to.be.true;\r",
							"    if (interviewers.length > 0)\r",
							"    {\r",
							"        var lastIndex = interviewers.length - 1;\r",
							"        pm.environment.set(\"InterviewerId\", interviewers[lastIndex].InterviewerId);\r",
							"        pm.environment.set(\"ClientInterviewerId\", interviewers[lastIndex].ClientInterviewerId);\r",
							"    }\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic {{AuthenticationToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{origin}}/v1/Interviewers/",
					"host": [
						"{{origin}}"
					],
					"path": [
						"v1",
						"Interviewers",
						""
					]
				},
				"description": "This method retrieve a list of interviewers. This list can be filtered and sorted using standard OData syntax."
			},
			"response": []
		},
		{
			"name": "Get Interviewer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"const validateProperties = (item) => {\r",
							"    return item.InterviewerId !== undefined \r",
							"    && item.UserName !== undefined \r",
							"    && item.FirstName !== undefined\r",
							"    && item.LastName !== undefined\r",
							"    && item.EmailAddress !== undefined\r",
							"    && item.TelephoneNumber !== undefined\r",
							"    && item.ClientInterviewerId !== undefined\r",
							"    && item.SuccessfulCount !== undefined\r",
							"    && item.UnsuccessfulCount !== undefined\r",
							"    && item.DroppedOutCount !== undefined\r",
							"    && item.RejectedCount !== undefined\r",
							"    && item.LastSyncDate !== undefined\r",
							"    && item.IsFullSynced !== undefined\r",
							"    && item.IsLastSyncSuccessful !== undefined\r",
							"    && item.IsSupervisor !== undefined;\r",
							"}\r",
							"\r",
							"pm.test(\"Response contains InterviewerId & ClientInterviewerId\", function () {\r",
							"    var interviewer = pm.response.json();\r",
							"    pm.expect(validateProperties(interviewer)).to.be.true;\r",
							"    pm.environment.set(\"InterviewerId\", interviewer.InterviewerId);\r",
							"    pm.environment.set(\"ClientInterviewerId\", interviewer.ClientInterviewerId);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic {{AuthenticationToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{origin}}/v1/Interviewers/{{InterviewerId}}",
					"host": [
						"{{origin}}"
					],
					"path": [
						"v1",
						"Interviewers",
						"{{InterviewerId}}"
					]
				},
				"description": "This method retrieve details of a specific interviewer using the interviewerId."
			},
			"response": []
		},
		{
			"name": "Get Interviewer By ClientId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"const validateProperties = (item) => {\r",
							"    return item.InterviewerId !== undefined \r",
							"    && item.UserName !== undefined \r",
							"    && item.FirstName !== undefined\r",
							"    && item.LastName !== undefined\r",
							"    && item.EmailAddress !== undefined\r",
							"    && item.TelephoneNumber !== undefined\r",
							"    && item.ClientInterviewerId !== undefined\r",
							"    && item.SuccessfulCount !== undefined\r",
							"    && item.UnsuccessfulCount !== undefined\r",
							"    && item.DroppedOutCount !== undefined\r",
							"    && item.RejectedCount !== undefined\r",
							"    && item.LastSyncDate !== undefined\r",
							"    && item.IsFullSynced !== undefined\r",
							"    && item.IsLastSyncSuccessful !== undefined\r",
							"    && item.IsSupervisor !== undefined;\r",
							"}\r",
							"\r",
							"pm.test(\"Response contains InterviewerId & ClientInterviewerId\", function () {\r",
							"    var interviewer = pm.response.json();\r",
							"    pm.expect(validateProperties(interviewer)).to.be.true;\r",
							"    pm.environment.set(\"InterviewerId\", interviewer.InterviewerId);\r",
							"    pm.environment.set(\"ClientInterviewerId\", interviewer.ClientInterviewerId);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic {{AuthenticationToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{origin}}/v1/Interviewers/GetByClientId/{{ClientInterviewerId}}",
					"host": [
						"{{origin}}"
					],
					"path": [
						"v1",
						"Interviewers",
						"GetByClientId",
						"{{ClientInterviewerId}}"
					]
				},
				"description": "This method retrieve the details of a specific interviewer using the clientInterviewerId."
			},
			"response": []
		},
		{
			"name": "Create Interviewer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"const validateProperties = (item) => {\r",
							"    return item.InterviewerId !== undefined \r",
							"    && item.UserName !== undefined \r",
							"    && item.FirstName !== undefined\r",
							"    && item.LastName !== undefined\r",
							"    && item.EmailAddress !== undefined\r",
							"    && item.TelephoneNumber !== undefined\r",
							"    && item.ClientInterviewerId !== undefined\r",
							"    && item.SuccessfulCount !== undefined\r",
							"    && item.UnsuccessfulCount !== undefined\r",
							"    && item.DroppedOutCount !== undefined\r",
							"    && item.RejectedCount !== undefined\r",
							"    && item.LastSyncDate !== undefined\r",
							"    && item.IsFullSynced !== undefined\r",
							"    && item.IsLastSyncSuccessful !== undefined\r",
							"    && item.IsSupervisor !== undefined;\r",
							"}\r",
							"\r",
							"pm.test(\"Response contains InterviewerId & ClientInterviewerId\", function () {\r",
							"    var interviewer = pm.response.json();\r",
							"    pm.expect(validateProperties(interviewer)).to.be.true;\r",
							"    pm.expect(interviewer.UserName == \"Capi Postman\").to.be.true;\r",
							"    pm.environment.set(\"InterviewerId\", interviewer.InterviewerId);\r",
							"    pm.environment.set(\"ClientInterviewerId\", interviewer.ClientInterviewerId);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic {{AuthenticationToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"UserName\": \"Capi Postman\",\r\n    \"FirstName\": \"Capi\",\r\n    \"LastName\": \"Tester\",\r\n    \"Password\": \"Password\",\r\n    \"EmailAddress\": \"capi@test.com\",\r\n    \"TelephoneNumber\": \"+34666555444\",\r\n    \"IsSupervisor\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{origin}}/v1/Interviewers/",
					"host": [
						"{{origin}}"
					],
					"path": [
						"v1",
						"Interviewers",
						""
					]
				},
				"description": "This method creates a new interviewer."
			},
			"response": []
		},
		{
			"name": "Update Interviewer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"const validateProperties = (item) => {\r",
							"    return item.InterviewerId !== undefined \r",
							"    && item.UserName !== undefined \r",
							"    && item.FirstName !== undefined\r",
							"    && item.LastName !== undefined\r",
							"    && item.EmailAddress !== undefined\r",
							"    && item.TelephoneNumber !== undefined\r",
							"    && item.ClientInterviewerId !== undefined\r",
							"    && item.LastSyncDate !== undefined\r",
							"    && item.IsFullSynced !== undefined\r",
							"    && item.IsLastSyncSuccessful !== undefined\r",
							"    && item.IsSupervisor !== undefined;\r",
							"}\r",
							"\r",
							"pm.test(\"Response contains InterviewerId & ClientInterviewerId\", function () {\r",
							"    var interviewer = pm.response.json();\r",
							"    pm.expect(validateProperties(interviewer)).to.be.true;\r",
							"    pm.expect(interviewer.FirstName == \"Updated\").to.be.true;\r",
							"    pm.environment.set(\"InterviewerId\", interviewer.InterviewerId);\r",
							"    pm.environment.set(\"ClientInterviewerId\", interviewer.ClientInterviewerId);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic {{AuthenticationToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"FirstName\": \"Updated\",\r\n    \"LastName\": \"Tester\",\r\n    \"EmailAddress\": \"capi@test.com\",\r\n    \"TelephoneNumber\": null,\r\n    \"IsSupervisor\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{origin}}/v1/Interviewers/{{InterviewerId}}",
					"host": [
						"{{origin}}"
					],
					"path": [
						"v1",
						"Interviewers",
						"{{InterviewerId}}"
					]
				},
				"description": "Update an interviewer with the specified specified fields"
			},
			"response": []
		},
		{
			"name": "Update Password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"const validateProperties = (item) => {\r",
							"    return item.InterviewerId !== undefined \r",
							"    && item.UserName !== undefined \r",
							"    && item.FirstName !== undefined\r",
							"    && item.LastName !== undefined\r",
							"    && item.EmailAddress !== undefined\r",
							"    && item.TelephoneNumber !== undefined\r",
							"    && item.ClientInterviewerId !== undefined\r",
							"    && item.LastSyncDate !== undefined\r",
							"    && item.IsFullSynced !== undefined\r",
							"    && item.IsLastSyncSuccessful !== undefined\r",
							"    && item.IsSupervisor !== undefined;\r",
							"}\r",
							"\r",
							"pm.test(\"Response contains InterviewerId & ClientInterviewerId\", function () {\r",
							"    var interviewer = pm.response.json();\r",
							"    pm.expect(validateProperties(interviewer)).to.be.true;\r",
							"    pm.environment.set(\"InterviewerId\", interviewer.InterviewerId);\r",
							"    pm.environment.set(\"ClientInterviewerId\", interviewer.ClientInterviewerId);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic {{AuthenticationToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Password\": \"a12345\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{origin}}/v1/Interviewers/{{InterviewerId}}",
					"host": [
						"{{origin}}"
					],
					"path": [
						"v1",
						"Interviewers",
						"{{InterviewerId}}"
					]
				},
				"description": "This method is used to reset an interviewer's password."
			},
			"response": []
		},
		{
			"name": "Delete Interviewer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic {{AuthenticationToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{origin}}/v1/Interviewers/{{InterviewerId}}",
					"host": [
						"{{origin}}"
					],
					"path": [
						"v1",
						"Interviewers",
						"{{InterviewerId}}"
					]
				},
				"description": "This method deletes a specified interviewer."
			},
			"response": []
		}
	]
}