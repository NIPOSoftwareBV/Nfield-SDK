{
	"info": {
		"_postman_id": "411031ca-e7aa-4aa6-ac31-3391cbc3117a",
		"name": "SurveyInvitationTemplates",
		"description": "A controller for managing invitation templates.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Post Invitation Template",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const validateProperties = (item) => {",
							"    return item.IsValid == true ",
							"    && item.ValidationError == undefined ",
							"    && item.Subject !== undefined",
							"    && item.Body !== undefined",
							"    && item.InvitationType !== undefined",
							"    && item.Name !== undefined",
							"    && item.Id !== undefined",
							"    ;",
							"}",
							"",
							"pm.test(\"Response says is valid\", function () {",
							"    const template = pm.response.json();",
							"    pm.expect(validateProperties(template)).to.be.true;",
							"    pm.environment.set(\"InvitationTemplateId\", template.Id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Basic {{AuthenticationToken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"InvitationType\": \"1\",\r\n  \"Name\": \"name\",\r\n  \"Subject\": \"subject\",\r\n  \"Body\": \"{unsubscribe-link}  {company-postal-address}\"\r\n}"
				},
				"url": {
					"raw": "{{origin}}/v1/Surveys/{{SurveyId}}/InvitationTemplates",
					"host": [
						"{{origin}}"
					],
					"path": [
						"v1",
						"Surveys",
						"{{SurveyId}}",
						"InvitationTemplates"
					]
				},
				"description": "This method create an invitation template."
			},
			"response": []
		},
		{
			"name": "Get Invitation Templates",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Status code name has string\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"const validateProperties = (item) => {",
							"    return item.InvitationType !== undefined ",
							"    && item.Name !== undefined ",
							"    && item.Subject !== undefined",
							"    && item.Body !== undefined",
							"    && item.Id !== undefined",
							"    ;",
							"}",
							"",
							"pm.test(\"Response contains all fields\", function () {",
							"    var templates = pm.response.json();",
							"    pm.expect(templates.every(validateProperties)).to.be.true;",
							"    if (templates.length > 0)",
							"    {",
							"        var lastIndex = templates.length - 1;",
							"        pm.environment.set(\"InvitationTemplateId\", templates[lastIndex].Id);",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/octet-stream"
					},
					{
						"key": "Authorization",
						"value": "Basic {{AuthenticationToken}}"
					}
				],
				"url": {
					"raw": "{{origin}}/v1/Surveys/{{SurveyId}}/InvitationTemplates/",
					"host": [
						"{{origin}}"
					],
					"path": [
						"v1",
						"Surveys",
						"{{SurveyId}}",
						"InvitationTemplates",
						""
					]
				},
				"description": "This method gets an invitation template."
			},
			"response": []
		},
		{
			"name": "Put Invitation Template",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const validateProperties = (item) => {",
							"    const id = pm.environment.get(\"InvitationTemplateId\");",
							"    return item.IsValid == true ",
							"    && item.ValidationError == undefined ",
							"    && item.Subject !== undefined",
							"    && item.Body !== undefined",
							"    && item.InvitationType !== undefined",
							"    && item.Name !== undefined",
							"    && item.Id == id",
							"    ;",
							"}",
							"",
							"pm.test(\"Response says is valid\", function () {",
							"    const template = pm.response.json();",
							"    pm.environment.set(\"InvitationTemplateId\", template.Id);",
							"    pm.expect(validateProperties(template)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Basic {{AuthenticationToken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"InvitationType\": \"1\",\r\n  \"Name\": \"other name\",\r\n  \"Subject\": \"other subject\",\r\n  \"Body\": \"other body with {unsubscribe-link}  {company-postal-address}\"\r\n}"
				},
				"url": {
					"raw": "{{origin}}/v1/Surveys/{{SurveyId}}/InvitationTemplates/{{InvitationTemplateId}}",
					"host": [
						"{{origin}}"
					],
					"path": [
						"v1",
						"Surveys",
						"{{SurveyId}}",
						"InvitationTemplates",
						"{{InvitationTemplateId}}"
					]
				},
				"description": "This method updates an invitation template."
			},
			"response": []
		},
		{
			"name": "Delete Invitation Template",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response contains Invitation template Id\", function () {",
							"    const survey = pm.response.json();",
							"    const id = pm.environment.get(InvitationTemplateId);",
							"    pm.expect(survey.SurveyId.length).to.eql(id);",
							"    pm.environment.set(\"InvitationTemplateId\", \"\");    ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/octet-stream"
					},
					{
						"key": "Authorization",
						"value": "Basic {{AuthenticationToken}}"
					}
				],
				"url": {
					"raw": "{{origin}}/v1/Surveys/{{SurveyId}}/InvitationTemplates/{{InvitationTemplateId}}",
					"host": [
						"{{origin}}"
					],
					"path": [
						"v1",
						"Surveys",
						"{{SurveyId}}",
						"InvitationTemplates",
						"{{InvitationTemplateId}}"
					]
				},
				"description": "This method deletes an invitation template."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}