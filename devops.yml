name: $(BuildID)

trigger:
  batch: false
  branches:
    include: ['master', '*/ci-*']

pr: none

jobs:
- job:
  displayName: Build project
  pool:
    vmImage: windows-2022      # Name: 'Hosted Windows 2019 with VS 2019'
  variables:
  - group: Nfield-Variables
  steps:
  - task: DotNetCoreCLI@2
    displayName: 'Dotnet Build SDK'
    inputs:
      projects: 'Nfield.SDK.sln'
      arguments: '--configuration $(BuildConfiguration)'

  # # Test Assemblies
  # - task: VSTest@2
  #   displayName: 'VsTest - testAssemblies'
  #   inputs:
  #     testAssemblyVer2: |
  #       **\$(BuildConfiguration)\net*\*test*.dll
  #       !**\obj\**
  #     platform: '$(BuildPlatform)'
  #     configuration: '$(BuildConfiguration)'

  - task: PublishSymbols@2
    displayName: 'Publish symbols path'
    inputs:
      SearchPattern: '**\bin\**\*.pdb'
      PublishSymbols: false
    continueOnError: true

  - task: CopyFiles@2
    displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
    inputs:
      SourceFolder: '$(system.defaultworkingdirectory)'
      Contents: '**\bin\$(BuildConfiguration)\**'
      TargetFolder: '$(build.artifactstagingdirectory)'
  
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'

  - task: PowerShell@1
    displayName: 'Create NuGet Version'
    inputs:
      scriptName: createnugetversion.ps1

  - task: DotNetCoreCLI@2
    displayName: '(when not pull): dotnet pack'
    inputs:
      command: pack
      packagesToPack: Library/Nfield.SDK.csproj
      nobuild: true
      versioningScheme: byEnvVar
      versionEnvVar: Version
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))

  # Publish NuGet package
  - task: NuGetCommand@2
    displayName: '(when not pull): NuGet push'
    inputs:
      command: push
      nuGetFeedType: external
      publishFeedCredentials: 'NuGet (Publish)'
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))

  - task: PowerShell@2
    displayName: 'Publish Github release (if needed)'
    inputs:
      targetType: filePath
      filePath: './publish-release.ps1'
      arguments: '-AccessToken $(GitAccessToken)'
      errorActionPreference: continue
    continueOnError: true

